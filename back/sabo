<?php

/**
 * @brief Utilitaire de ligne de commande du framework
 * @author Yahaya Bathily https://github.com/yahvya
 */

// inclusion de l'autoloader du framework ainsi que du client
$appRoot = __DIR__;

require_once("$appRoot/sabo-core/vendor/autoload.php");
require_once("$appRoot/vendor/autoload.php");

use SaboCore\Cli\Commands\ControllerMakerCommand;
use SaboCore\Cli\Commands\ModelMakerCommand;
use SaboCore\Config\Config;
use SaboCore\Routing\Application\Application;

// configuration publique de l'application
define(
    constant_name: "APP_CONFIG",
    value: Config::create()->setConfig(name: "ROOT", value: $appRoot)
);

// lancement de l'application
Application::launchApplication(applicationConfig: Application::getApplicationDefaultConfig(),startRouting: false);

use BeBat\ConsoleColor\Style\BackgroundColor;
use BeBat\ConsoleColor\Style\Color;
use BeBat\ConsoleColor\Style\Composite;
use BeBat\ConsoleColor\Style\Text;
use SaboCore\Cli\Cli\SaboCli;
use SaboCore\Cli\Commands\HelpCommand;
use SaboCore\Cli\Commands\LaunchServerCommand;
use SaboCore\Cli\Theme\Theme;

// configuration du thÃ¨me d'affichage
$themeConfig = Config::create()
    ->setConfig(
        Theme::BASIC_TEXT_STYLE->value,
        new Composite(Color::BrightWhite)
    )
    ->setConfig(
        Theme::SPECIAL_TEXT_STYLE->value,
        new Composite(Color::Blue,Text::Bold)
    )
    ->setConfig(
        Theme::NOT_IMPORTANT_STYLE->value,
        new Composite(Color::White)
    )
    ->setConfig(
        Theme::TITLE_STYLE->value,
        new Composite(Color::BrightBlue,Text::Bold)
    )
    ->setConfig(
        Theme::HOVER_STYLE->value,
        new Composite(BackgroundColor::Green,Color::White)
    )
    ->setConfig(
        Theme::BASIC_ERROR_STYLE->value,
        new Composite(Color::Red,Text::Bold)
    )
    ->setConfig(
        Theme::IMPORTANT_ERROR_STYLE->value,
        new Composite(Color::White,Text::Bold, BackgroundColor::Red)
    );

// enregistrement des commandes et exÃ©cution
$cli = new SaboCli($argv,$themeConfig);

$cli
    // commandes par dÃ©faut
    ->registerCommand(executor: new HelpCommand(commandName: "help") )
    ->registerCommand(executor: new LaunchServerCommand(commandName: "serve") )
    ->registerCommand(executor: new ControllerMakerCommand(commandName: "make:controller") )
    ->registerCommand(executor: new ModelMakerCommand(commandName: "make:model") )
    // enregistrez vos commandes (attention aux duplicatas de noms)
    ->start();